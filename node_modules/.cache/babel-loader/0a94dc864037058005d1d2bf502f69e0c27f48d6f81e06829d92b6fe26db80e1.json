{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\psscmusm-event-management\\\\src\\\\components\\\\EventButtons.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventButtons = () => {\n  const events = [{\n    src: \"/kasutra.jpg\",\n    title: \"KaSuTra-11\",\n    page: \"/event1\"\n  }, {\n    src: \"/pab.jpg\",\n    title: \"PAB Sidang 24/25\",\n    page: \"/event2\"\n  }, {\n    src: \"/kcl.jpg\",\n    title: \"KCL 2024\",\n    page: \"/event3\"\n  }, {\n    src: \"/spm.jpg\",\n    title: \"SPM 2.0\",\n    page: \"/event4\"\n  }\n  //{ src: \"/kwd10.jpg\", title: \"KWD 10\", page: \"/event5\" },\n  ];\n  const chunkEvents = (array, size) => {\n    const result = [];\n    for (let i = 0; i < array.length; i += size) {\n      result.push(array.slice(i, i + size));\n    }\n    return result;\n  };\n  const eventRows = chunkEvents(events, 3);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"event-buttons\",\n    children: eventRows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-row\",\n      children: row.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-button\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: event.page,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: event.src,\n            alt: event.title,\n            className: \"small-poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = EventButtons;\nexport default EventButtons;\nvar _c;\n$RefreshReg$(_c, \"EventButtons\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","EventButtons","events","src","title","page","chunkEvents","array","size","result","i","length","push","slice","eventRows","className","children","map","row","rowIndex","event","index","to","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/psscmusm-event-management/src/components/EventButtons.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EventButtons = () => {\r\n  const events = [\r\n    { src: \"/kasutra.jpg\", title: \"KaSuTra-11\", page: \"/event1\" },\r\n    { src: \"/pab.jpg\", title: \"PAB Sidang 24/25\", page: \"/event2\" },\r\n    { src: \"/kcl.jpg\", title: \"KCL 2024\", page: \"/event3\" },\r\n    { src: \"/spm.jpg\", title: \"SPM 2.0\", page: \"/event4\" },\r\n    //{ src: \"/kwd10.jpg\", title: \"KWD 10\", page: \"/event5\" },\r\n  ];\r\n\r\n  const chunkEvents = (array, size) => {\r\n    const result = [];\r\n    for (let i = 0; i < array.length; i += size) {\r\n      result.push(array.slice(i, i + size));\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const eventRows = chunkEvents(events, 3);\r\n\r\n  return (\r\n    <section className=\"event-buttons\">\r\n      {eventRows.map((row, rowIndex) => (\r\n        <div className=\"event-row\" key={rowIndex}>\r\n          {row.map((event, index) => (\r\n            <div className=\"event-button\" key={index}>\r\n              <Link to={event.page}>\r\n                <img\r\n                  src={event.src}\r\n                  alt={event.title}\r\n                  className=\"small-poster\"\r\n                />\r\n                <p>{event.title}</p>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EventButtons;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAMC,MAAM,GAAG,CACb;IAAEC,GAAG,EAAE,cAAc;IAAEC,KAAK,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC7D;IAAEF,GAAG,EAAE,UAAU;IAAEC,KAAK,EAAE,kBAAkB;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/D;IAAEF,GAAG,EAAE,UAAU;IAAEC,KAAK,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAU,CAAC,EACvD;IAAEF,GAAG,EAAE,UAAU;IAAEC,KAAK,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAU;EACrD;EAAA,CACD;EAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;IACnC,MAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,IAAIF,IAAI,EAAE;MAC3CC,MAAM,CAACG,IAAI,CAACL,KAAK,CAACM,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAAC,CAAC;IACvC;IACA,OAAOC,MAAM;EACf,CAAC;EAED,MAAMK,SAAS,GAAGR,WAAW,CAACJ,MAAM,EAAE,CAAC,CAAC;EAExC,oBACEF,OAAA;IAASe,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC/BF,SAAS,CAACG,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBAC3BnB,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBE,GAAG,CAACD,GAAG,CAAC,CAACG,KAAK,EAAEC,KAAK,kBACpBrB,OAAA;QAAKe,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BhB,OAAA,CAACF,IAAI;UAACwB,EAAE,EAAEF,KAAK,CAACf,IAAK;UAAAW,QAAA,gBACnBhB,OAAA;YACEG,GAAG,EAAEiB,KAAK,CAACjB,GAAI;YACfoB,GAAG,EAAEH,KAAK,CAAChB,KAAM;YACjBW,SAAS,EAAC;UAAc;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACF3B,OAAA;YAAAgB,QAAA,EAAII,KAAK,CAAChB;UAAK;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC,GAR0BN,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASnC,CACN;IAAC,GAZ4BR,QAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAanC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd,CAAC;AAACC,EAAA,GAvCI3B,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}